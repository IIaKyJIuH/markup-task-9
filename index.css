body
{
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
}

.Catogram-Default
{
    margin: auto;
    width: 1440px;
    height: 1024px;
    background-color: #fff;
    display: grid;
    grid-template: '. . .' 20px
        '. sprites .' 48px
        '. . .' 12px
        '. cat_image .' 632px
        '. . .' 69px
        'arrow-left filters arrow-right' 206px
        '. . .' 37px
        / 1fr 695px 1fr;
}

.Filters
{
    grid-area: filters;
    height: 206px;
    width: 695px;
}

.Sprites
{
    grid-area: sprites;
    height: 48px;
    display: grid;
    grid-template: 'fill scale logo rotate flip' 1fr / auto;
    grid-gap: 113px;
}

.Fill,
.Scalings svg,
.Rotatings svg,
.Flip,
.ArL svg,
.ArR svg
{
    opacity: .8;
    fill: #444;
}

.Sprites > label[for='fill']
{
    grid-area: fill;
    background: no-repeat 0 38px;
    cursor: pointer;
}

.Fill:hover,
.Scalings:hover,
.Logo:hover,
.Rotatings:hover,
.Flip:hover
{
    opacity: 1;
}

input[id='fill']:checked ~ main .Fill,
input[id='flip']:checked ~ main .Flip
{
    fill: #000;
    opacity: 1;
}

input[id='fill']:checked ~ main .imgM
{
    object-fit: contain;
}

input[id='fill']:checked ~ main .Photo-container::after
{
    background-image: linear-gradient(to bottom,
    rgba(255, 255, 255, 0) 0, #fff 70%);
}

.Scalings
{
    grid-area: scale;
}

.Scalings svg
{
    cursor: pointer;
}

.Logo
{
    grid-area: logo;
    object-fit: contain;
    fill: url(#rg);
    cursor: pointer;
}

.Rotatings
{
    grid-area: rotate;
}

.Rotatings svg
{
    cursor: pointer;
}

.RadioRt90:checked ~ main .Photo-container::after
{
    background-image: linear-gradient(to bottom,
    rgba(255, 255, 255, 0) 0, #fff 100%);
    transform: rotate(90deg) translate(-275px, 275px);
}

input[id='fill']:checked .RadioRt90:checked ~ main .Photo-container::after
{
    background-image: linear-gradient(to bottom,
    rgba(255, 255, 255, 0) 0, #fff 70%);
    transform: rotate(90deg) translate(-275px, 275px);
}

.RadioRt270:checked ~ main .Photo-container::after
{
    background-image: linear-gradient(to bottom,
    rgba(255, 255, 255, 0) 0, #fff 100%);
    transform: rotate(-90deg) translate(275px, 275px);
}

input[id='fill']:checked .RadioRt270:checked ~ main .Photo-container::after
{
    background-image: linear-gradient(to bottom,
    rgba(255, 255, 255, 0) 0, #fff 70%);
    transform: rotate(-90deg) translate(275px, 275px);
}

.RadioRt180:checked ~ main .Photo-container::after
{
    background-image: linear-gradient(to bottom,
    rgba(255, 255, 255, 0) 0, #fff 100%);
    transform: rotate(180deg) translateY(551px);
}

input[id='fill']:checked .RadioRt180:checked ~ main .Photo-container::after
{
    background-image: linear-gradient(to bottom,
    rgba(255, 255, 255, 0) 0, #fff 70%);
    transform: rotate(180deg) translateY(551px);
}

/* Совместим две анимации при 90% скейлинге */

.RadioSc90\%:checked ~ .RadioRt90:checked ~ main .imgM
{
    transform: scale(.9) rotate(90deg);
}

.RadioSc90\%:checked ~ .RadioRt180:checked ~ main .imgM
{
    transform: scale(.9) rotate(180deg);
}

.RadioSc90\%:checked ~ .RadioRt270:checked ~ main .imgM
{
    transform: scale(.9) rotate(270deg);
}

.RadioSc90\%:checked ~ .RadioRtOr:checked ~ main .imgM
{
    transform: scale(.9) rotate(360deg);
}

/* Теперь без увеличения масштаба*/

.RadioScOr:checked ~ .RadioRt90:checked ~ main .imgM
{
    transform: scale(1) rotate(90deg);
}

.RadioScOr:checked ~ .RadioRt180:checked ~ main .imgM
{
    transform: scale(1) rotate(180deg);
}

.RadioScOr:checked ~ .RadioRt270:checked ~ main .imgM
{
    transform: scale(1) rotate(270deg);
}

.RadioScOr:checked ~ .RadioRtOr:checked ~ main .imgM
{
    transform: scale(1) rotate(360deg);
}

/* Теперь при 110% увеличении */

.RadioSc110\%:checked ~ .RadioRt90:checked ~ main .imgM
{
    transform: scale(1.1) rotate(90deg);
}

.RadioSc110\%:checked ~ .RadioRt180:checked ~ main .imgM
{
    transform: scale(1.1) rotate(180deg);
}

.RadioSc110\%:checked ~ .RadioRt270:checked ~ main .imgM
{
    transform: scale(1.1) rotate(270deg);
}

.RadioSc110\%:checked ~ .RadioRtOr:checked ~ main .imgM
{
    transform: scale(1.1) rotate(360deg);
}

/* Теперь при 120% */

.RadioSc120\%:checked ~ .RadioRt90:checked ~ main .imgM
{
    transform: scale(1.2) rotate(90deg);
}

.RadioSc120\%:checked ~ .RadioRt180:checked ~ main .imgM
{
    transform: scale(1.2) rotate(180deg);
}

.RadioSc120\%:checked ~ .RadioRt270:checked ~ main .imgM
{
    transform: scale(1.2) rotate(270deg);
}

.RadioSc120\%:checked ~ .RadioRtOr:checked ~ main .imgM
{
    transform: scale(1.2) rotate(360deg);
}

/* !!! Теперь всё то же самое, но с инвертированием !!! */

.RadioSc90\%:checked ~ .RadioRt90:checked ~ .RadioInv:checked ~ main .imgM
{
    transform: scale(.9, -.9) rotate(90deg);
}

.RadioSc90\%:checked ~ .RadioRt180:checked ~ .RadioInv:checked ~ main .imgM
{
    transform: scale(-.9, .9) rotate(180deg);
}

.RadioSc90\%:checked ~ .RadioRt270:checked ~ .RadioInv:checked ~ main .imgM
{
    transform: scale(.9, -.9) rotate(270deg);
}

.RadioSc90\%:checked ~ .RadioRtOr:checked ~ .RadioInv:checked ~ main .imgM
{
    transform: scale(-.9, .9) rotate(360deg);
}

/* Теперь без увеличения масштаба*/

.RadioScOr:checked ~ .RadioRt90:checked ~ .RadioInv:checked ~ main .imgM
{
    transform: scale(1, -1) rotate(90deg);
}

.RadioScOr:checked ~ .RadioRt180:checked ~ .RadioInv:checked ~ main .imgM
{
    transform: scale(-1, 1) rotate(180deg);
}

.RadioScOr:checked ~ .RadioRt270:checked ~ .RadioInv:checked ~ main .imgM
{
    transform: scale(1, -1) rotate(270deg);
}

.RadioScOr:checked ~ .RadioRtOr:checked ~ .RadioInv:checked ~ main .imgM
{
    transform: scale(-1, 1) rotate(360deg);
}

/* Теперь при 110% увеличении */

.RadioSc110\%:checked ~ .RadioRt90:checked ~ .RadioInv:checked ~ main .imgM
{
    transform: scale(1.1, -1.1) rotate(90deg);
}

.RadioSc110\%:checked ~ .RadioRt180:checked ~ .RadioInv:checked ~ main .imgM
{
    transform: scale(-1.1, 1.1) rotate(180deg);
}

.RadioSc110\%:checked ~ .RadioRt270:checked ~ .RadioInv:checked ~ main .imgM
{
    transform: scale(1.1, -1.1) rotate(270deg);
}

.RadioSc110\%:checked ~ .RadioRtOr:checked ~ .RadioInv:checked ~ main .imgM
{
    transform: scale(-1.1, 1.1) rotate(360deg);
}

/* Теперь при 120% */

.RadioSc120\%:checked ~ .RadioRt90:checked ~ .RadioInv:checked ~ main .imgM
{
    transform: scale(1.2, -1.2) rotate(90deg);
}

.RadioSc120\%:checked ~ .RadioRt180:checked ~ .RadioInv:checked ~ main .imgM
{
    transform: scale(-1.2, 1.2) rotate(180deg);
}

.RadioSc120\%:checked ~ .RadioRt270:checked ~ .RadioInv:checked ~ main .imgM
{
    transform: scale(1.2, -1.2) rotate(270deg);
}

.RadioSc120\%:checked ~ .RadioRtOr:checked ~ .RadioInv:checked ~ main .imgM
{
    transform: scale(-1.2, 1.2) rotate(360deg);
}

/* Всё */

.Sprites > label[for='flip']
{
    grid-area: flip;
    display: flex;
    align-self: center;
    cursor: pointer;
}

input[name='forming'],
input[name='rotating'],
input[name='scaling'],
input[name='filtering'],
.Scale_90\%,
.Scale_origin,
.Scale_110\%,
.Scale_120\%,
.Rotate_origin,
.Rotate_90deg,
.Rotate_180deg,
.Rotate_270deg
{
    display: none;
}

input[id='scale-90\%']:checked ~ main .Sprites .Scale_origin,
input[id='scale-origin']:checked ~ main .Sprites .Scale_110\%,
input[id='scale-110\%']:checked ~ main .Sprites .Scale_120\%,
input[id='scale-120\%']:checked ~ main .Sprites .Scale_90\%,
input[id='rotate-origin']:checked ~ main .Sprites .Rotate_90deg,
input[id='rotate-90deg']:checked ~ main .Sprites .Rotate_180deg,
input[id='rotate-180deg']:checked ~ main .Sprites .Rotate_270deg,
input[id='rotate-270deg']:checked ~ main .Sprites .Rotate_origin
{
    display: block;
}

.Photo-container
{
    grid-area: cat_image;
    width: 632px;
    height: 632px;
    overflow: hidden;
    justify-self: center;
}

.Photo-container::after
{
    display: block;
    position: relative;
    background-image: linear-gradient(to bottom,
    rgba(255, 255, 255, 0) 0, #fff 100%);
    margin-top: -85px;
    height: 85px;
    content: '';
}

.Photo-container > img
{
    width: 100%;
    height: 100%;
    object-fit: none;
}

.Filters
{
    width: 695px;
    height: 222px;
    overflow: hidden;
    text-align: center;
    font-family: Helvetica, serif;
    font-size: 18px;
    font-weight: normal;
    font-style: normal;
    font-stretch: normal;
    line-height: normal;
    letter-spacing: normal;
}

.Filters__carousel
{
    display: grid;
    grid-template: 'no-filter Piter Yalta UralSummer Canada Cuba' 206px / 1fr;
    grid-gap: 5px;
    width: 100%;
}

.Filters img
{
    margin-top: 15px;
    width: 170px;
    height: 169px;
    object-fit: contain;
}

.Filters span,
.Filters img
{
    cursor: pointer;
}

.Filters__no-filter
{
    grid-area: no-filter;
}

.Filters__no-filter img
{
    box-shadow: 0 8px 16px 0 rgba(0, 0, 0, .12);
}

.Filters__Piter
{
    grid-area: Piter;
}

.Filters__Piter img
{
    filter: grayscale(1);
    box-shadow: 0 8px 16px 0 rgba(0, 0, 0, .12);
}

.Filters__Yalta
{
    grid-area: Yalta;
}

.Filters__Yalta img
{
    filter: saturate(2);
    box-shadow: 0 8px 16px 0 rgba(0, 0, 0, .12);
}

.Filters__UralSummer
{
    grid-area: UralSummer;
}

.Filters__UralSummer img
{
    filter: hue-rotate(180deg);
    box-shadow: 0 8px 16px 0 rgba(0, 0, 0, .12);
}

.Filters__Canada
{
    grid-area: Canada;
}

.Filters__Canada img
{
    filter: sepia(1);
    box-shadow: 0 8px 16px 0 rgba(0, 0, 0, .12);
}

.Filters__Cuba
{
    grid-area: Cuba;
}

.Filters__Cuba img
{
    animation: CubaFilterAnim 2s linear alternate infinite;
    box-shadow: 0 8px 16px 0 rgba(0, 0, 0, .12);
}

input[id='no-filter']:checked ~ main > .Filters .Filters__no-filter,
input[id='Piter-filter']:checked ~ main > .Filters .Filters__Piter,
input[id='Yalta-filter']:checked ~ main > .Filters .Filters__Yalta,
input[id='UralSummer-filter']:checked ~ main > .Filters .Filters__UralSummer,
input[id='Canada-filter']:checked ~ main > .Filters .Filters__Canada,
input[id='Cuba-filter']:checked ~ main > .Filters .Filters__Cuba
{
    font-weight: bold;
}

input[id='no-filter']:checked ~ main > .Photo-container > img
{
    filter: none;
}

input[id='Piter-filter']:checked ~ main > .Photo-container > img
{
    filter: grayscale(1);
    box-shadow: 0 8px 16px 0 rgba(0, 0, 0, .12);
}

input[id='Yalta-filter']:checked ~ main > .Photo-container > img
{
    filter: saturate(2);
    box-shadow: 0 8px 16px 0 rgba(0, 0, 0, .12);
}

input[id='UralSummer-filter']:checked ~ main > .Photo-container > img
{
    filter: hue-rotate(180deg);
    box-shadow: 0 8px 16px 0 rgba(0, 0, 0, .12);
}

input[id='Canada-filter']:checked ~ main > .Photo-container > img
{
    filter: sepia(1);
    box-shadow: 0 8px 16px 0 rgba(0, 0, 0, .12);
}

input[id='Cuba-filter']:checked ~ main > .Photo-container > img
{
    box-shadow: 0 8px 16px 0 rgba(0, 0, 0, .12);
}

.ArR label,
.ArL label
{
    width: 50px;
    height: 4px;
    align-self: center;
    display: none;
    cursor: pointer;
}

.ArL
{
    grid-area: arrow-left;
    display: flex;
    margin-left: auto;
}

.ArL svg
{
    transform: rotate(90deg);
    align-self: center;
}

.ArR
{
    grid-area: arrow-right;
    display: flex;
    margin-right: auto;
}

.ArR svg
{
    transform: rotate(-90deg);
    align-self: center;
}

input[id='no-filter']:checked ~ main .ArL label[for='no-filter'],
input[id='Cuba-filter']:checked ~ main .ArR label[for='Cuba-filter']
{
    display: block;
    opacity: .6;
    fill: rgba(170, 170, 170, .8);
    cursor: not-allowed;
}

input[id='no-filter']:checked ~ main .ArR label[for='Piter-filter'],
input[id='Piter-filter']:checked ~ main .ArL label[for='no-filter'],
input[id='Piter-filter']:checked ~ main .ArR label[for='Yalta-filter'],
input[id='Yalta-filter']:checked ~ main .ArL label[for='Piter-filter'],
input[id='Yalta-filter']:checked ~ main .ArR label[for='UralSummer-filter'],
input[id='UralSummer-filter']:checked ~ main .ArL label[for='Yalta-filter'],
input[id='UralSummer-filter']:checked ~ main .ArR label[for='Canada-filter'],
input[id='Canada-filter']:checked ~ main .ArL label[for='UralSummer-filter'],
input[id='Canada-filter']:checked ~ main .ArR label[for='Cuba-filter'],
input[id='Cuba-filter']:checked ~ main .ArL label[for='Canada-filter']
{
    display: block;
}

input[id='no-filter']:checked ~ main .Filters > .Filters__carousel
{
    transition: 1s ease-in-out;
    transform: translateX(0);
}

input[id='Piter-filter']:checked ~ main .Filters > .Filters__carousel
{
    transition: 1s ease-in-out;
    transform: translateX(-175px);
}

input[id='Yalta-filter']:checked ~ main .Filters > .Filters__carousel
{
    transition: 1s ease-in-out;
    transform: translateX(-350px);
}

input[id='UralSummer-filter']:checked ~ main .Filters > .Filters__carousel
{
    transition: 1s ease-in-out;
    transform: translateX(-350px);
}

input[id='Canada-filter']:checked ~ main .Filters > .Filters__carousel
{
    transition: 1s ease-in-out;
    transform: translateX(-350px);
}

input[id='Cuba-filter']:checked ~ main .Filters > .Filters__carousel
{
    transition: 1s ease-in-out;
    transform: translateX(-350px);
}

input[id='Piter-filter']:checked ~ main .imgM
{
    animation: PiterFilterAnim 1s linear forwards;
}

@keyframes PiterFilterAnim
{
    from
    {
        filter: grayscale(0);
    }

    to
    {
        filter: grayscale(1);
    }
}

input[id='Yalta-filter']:checked ~ main .imgM
{
    animation: YaltaFilterAnim 1s linear forwards;
}

@keyframes YaltaFilterAnim
{
    0%
    {
        filter: saturate(0);
    }

    50%
    {
        filter: saturate(1);
    }

    100%
    {
        filter: saturate(2);
    }
}

input[id='UralSummer-filter']:checked ~ main .imgM
{
    animation: UralSummerFilterAnim 1s linear forwards ;
}

@keyframes UralSummerFilterAnim
{
    from
    {
        filter: hue-rotate(0);
    }

    to
    {
        filter: hue-rotate(180deg);
    }
}

input[id='Canada-filter']:checked ~ main .imgM
{
    animation: CanadaHELLOAnim 2s linear forwards;
}

@keyframes CanadaHELLOAnim
{
    from
    {
        filter: none;
    }

    to
    {
        filter: sepia(1);
    }

}

input[id='Cuba-filter']:checked ~ main .imgM
{
    animation: CubaFilterAnim 2s ease-in-out alternate infinite;
}

/* Бонус */

@keyframes CubaFilterAnim
{
    0%
    {
        filter: hue-rotate(72deg);
    }

    25%
    {
        filter: hue-rotate(144deg) saturate(3);
    }

    50%
    {
        filter: hue-rotate(216deg) saturate(9) blur(2px);
    }

    75%
    {
        filter: hue-rotate(288deg) saturate(6);
    }

    100%
    {
        filter: hue-rotate(360deg) saturate(1) blur(4px);
    }
}
